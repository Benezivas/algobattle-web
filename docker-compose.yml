services:
  database:
    image: mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_PASSWORD}
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${SQL_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - db-data:/var/lib/mysql
  backend:
    build: backend
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ALGOBATTLE_CONFIG_PATH=/algobattle/config.toml
      - SQL_PASSWORD=${SQL_PASSWORD}
    volumes:
      - ./config.toml:/algobattle/config.toml
      - db-files:/algobattle/dbfiles
  runner:
    build: backend
    command: algobattle_runner
    stop_grace_period: 1s
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ALGOBATTLE_CONFIG_PATH=/algobattle/config.toml
      - SQL_PASSWORD=${SQL_PASSWORD}
      - ALGOBATTLE_IO_VOLUMES=true
    volumes:
      - ./config.toml:/algobattle/config.toml
      - db-files:/algobattle/dbfiles
      - /var/run/docker.sock,target=/var/run/docker.sock
      - algobattle_input:/algobattle/input
      - algobattle_output:/algobattle/output
  nginx:
    build: .
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  db-data:
    # intentionally empty
  db-files:
    # intentionally empty
  algobattle_input:
    external: true
  algobattle_output:
    external: true
