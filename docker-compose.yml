services:
  database:
    image: mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${ALGOBATTLE_DB_PW}
    healthcheck:
      test: mysqladmin ping --protocol tcp
      interval: 5s
      timeout: 10s
      retries: 12
    volumes:
      - db-data:/var/lib/mysql
  backend:
    build: backend
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: "curl --fail localhost:8000/openapi.json || exit 1"
      interval: 5s
      timeout: 10s
      retries: 12
    environment:
      - TZ=Europe/Berlin
      - ALGOBATTLE_DB_PW=${ALGOBATTLE_DB_PW}
      - ALGOBATTLE_BASE_URL=${ALGOBATTLE_BASE_URL}
    volumes:
      - db-files:/algobattle/dbfiles
  runner:
    build: backend
    command: algobattle_runner
    stop_grace_period: 1s
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - ALGOBATTLE_IO_DIR=./io
      - TZ=Europe/Berlin
      - ALGOBATTLE_DB_PW=${ALGOBATTLE_DB_PW}
      - ALGOBATTLE_BASE_URL=${ALGOBATTLE_BASE_URL}
    volumes:
      - db-files:/algobattle/dbfiles
      - /var/run/docker.sock,target=/var/run/docker.sock
      - ./io:/algobattle/io
  nginx:
    build: .
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 8080:8080
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  db-data:
    # intentionally empty
  db-files:
    # intentionally empty
